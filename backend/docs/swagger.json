{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/alerts": {
            "get": {
                "description": "Retrieve all alerts, optionally filter by type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get all alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by alert type (e.g., new_listing, delisting)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of alerts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ResponseAlertList"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve alerts",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new alert with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Create an alert",
                "parameters": [
                    {
                        "description": "Alert details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created alert",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseAlertCreated"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create alert",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/alerts/symbol": {
            "post": {
                "description": "Set a new alert for symbols that are newly listed or delisted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Set an alert for new or delisted symbols",
                "parameters": [
                    {
                        "description": "Alert details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created alert for symbol",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSetSymbolAlert"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create alert for symbol",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/alerts/{id}": {
            "get": {
                "description": "Retrieve an alert by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get an alert by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert details",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseAlertDetail"
                        }
                    },
                    "400": {
                        "description": "Invalid alert ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an alert by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Delete an alert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Alert ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseAlertDeleted"
                        }
                    },
                    "400": {
                        "description": "Invalid alert ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Alert not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/symbols-alerts": {
            "get": {
                "description": "Retrieve new and delisted symbols from Binance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get new and delisted symbols",
                "responses": {
                    "200": {
                        "description": "List of new and delisted symbols",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseNewDelistedSymbols"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve symbols",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "post": {
                "description": "Create a new user with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_dath-241_coin-price-be-go_services_trigger-service_models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseUserCreated"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing email",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create user",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/alerts": {
            "get": {
                "description": "Retrieve all alerts for a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user alerts",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseUserAlerts"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve alerts",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}/alerts/notify": {
            "post": {
                "description": "Send a notification email to the user for their alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Notify user of alerts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseNotificationSent"
                        }
                    },
                    "500": {
                        "description": "Failed to send notification",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vip2/start-alert-checker": {
            "post": {
                "description": "Starts the alert checker to monitor for alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert Running"
                ],
                "summary": "Start alert checker",
                "responses": {
                    "200": {
                        "description": "Alert checker started successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseAlertCheckerStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vip2/stop-alert-checker": {
            "post": {
                "description": "Stops the alert checker from monitoring for alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alert Running"
                ],
                "summary": "Stop alert checker",
                "responses": {
                    "200": {
                        "description": "Alert checker stopped successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseAlertCheckerStatus"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_dath-241_coin-price-be-go_services_trigger-service_models.User": {
            "type": "object",
            "properties": {
                "alerts": {
                    "description": "Danh sách các cảnh báo của người dùng",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Alert"
                    }
                },
                "email": {
                    "description": "Email của người dùng",
                    "type": "string"
                },
                "id": {
                    "description": "ID của người dùng",
                    "type": "string"
                }
            }
        },
        "models.Alert": {
            "type": "object",
            "properties": {
                "alert_id": {
                    "type": "string"
                },
                "condition": {
                    "description": "Condition for the alert, e.g., \"\u003e=\", \"\u003c=\", \"==\", \"in range\", \"out range\"",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamp for when the alert was created",
                    "type": "integer"
                },
                "frequency": {
                    "description": "Frequency of notification, e.g., \"immediate\", \"daily\", \"weekly\"",
                    "type": "string"
                },
                "is_active": {
                    "description": "Whether the alert is active",
                    "type": "boolean"
                },
                "last_fundingrate_interval": {
                    "type": "string"
                },
                "market": {
                    "description": "Market for the alert, e.g., \"spot\" or \"future\"",
                    "type": "string"
                },
                "max_range": {
                    "type": "number"
                },
                "max_repeat_count": {
                    "description": "Số lần lặp lại tối đa",
                    "type": "integer"
                },
                "message": {
                    "description": "Thông điệp sẽ được gửi trong cảnh báo (ví dụ: \"BTC giá đã vượt $20,000\")",
                    "type": "string"
                },
                "min_range": {
                    "type": "number"
                },
                "next_trigger_time": {
                    "description": "Thời gian kích hoạt tiếp theo",
                    "type": "string"
                },
                "notification_method": {
                    "description": "How the user will be notified (email, push, Telegram)",
                    "type": "string"
                },
                "price": {
                    "description": "Price threshold for the alert, only applicable for price alerts",
                    "type": "number"
                },
                "range": {
                    "description": "Price range for alerts that check if price falls within or outside a range",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "repeat_count": {
                    "description": "Số lần đã lặp lại",
                    "type": "integer"
                },
                "snooze_condition": {
                    "description": "Loại snooze",
                    "type": "string"
                },
                "symbol": {
                    "description": "Symbol for the alert, e.g., \"BTCUSDT\"",
                    "type": "string"
                },
                "symbols": {
                    "description": "List of symbols for symbol alerts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "threshold": {
                    "description": "Threshold for the alert, only applicable for price alerts",
                    "type": "number"
                },
                "type": {
                    "description": "Type of symbol alert, e.g., \"new_listing\" or \"delisting\"",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Timestamp for when the alert was last updated",
                    "type": "integer"
                },
                "user_id": {
                    "description": "ID của người dùng đặt cảnh báo",
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "An error occurred"
                }
            }
        },
        "models.ResponseAlertCheckerStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Alert checker started"
                }
            }
        },
        "models.ResponseAlertCreated": {
            "type": "object",
            "properties": {
                "alert_id": {
                    "type": "string",
                    "example": "647f1f77bcf86cd799439011"
                },
                "message": {
                    "type": "string",
                    "example": "Alert created successfully"
                }
            }
        },
        "models.ResponseAlertDeleted": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Alert deleted successfully"
                }
            }
        },
        "models.ResponseAlertDetail": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "example": "\u003e="
                },
                "createdAt": {
                    "type": "string",
                    "example": "2024-11-21T00:00:00Z"
                },
                "frequency": {
                    "type": "string",
                    "example": "immediate"
                },
                "id": {
                    "type": "string",
                    "example": "647f1f77bcf86cd799439011"
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "maxRepeatCount": {
                    "type": "integer",
                    "example": 5
                },
                "price": {
                    "type": "number",
                    "example": 50000
                },
                "range": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "snoozeCondition": {
                    "type": "string",
                    "example": "none"
                },
                "symbol": {
                    "type": "string",
                    "example": "BTCUSDT"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2024-11-21T00:00:00Z"
                }
            }
        },
        "models.ResponseAlertList": {
            "type": "object",
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ResponseAlertDetail"
                    }
                }
            }
        },
        "models.ResponseNewDelistedSymbols": {
            "type": "object",
            "properties": {
                "delisted_symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[BNBUSDT]"
                    ]
                },
                "new_symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[BTCUSDT",
                        " ETHUSDT]"
                    ]
                }
            }
        },
        "models.ResponseNotificationSent": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Notification sent"
                }
            }
        },
        "models.ResponseSetSymbolAlert": {
            "type": "object",
            "properties": {
                "alert_id": {
                    "type": "string",
                    "example": "647f1f77bcf86cd799439011"
                },
                "message": {
                    "type": "string",
                    "example": "Alert created successfully"
                }
            }
        },
        "models.ResponseUserAlerts": {
            "type": "object",
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Alert"
                    }
                }
            }
        },
        "models.ResponseUserCreated": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User created successfully"
                },
                "user_id": {
                    "type": "string",
                    "example": "647f1f77bcf86cd799439011"
                }
            }
        }
    }
}