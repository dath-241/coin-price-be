definitions:
  github_com_dath-241_coin-price-be-go_services_trigger-service_models.User:
    properties:
      alerts:
        description: Danh sách các cảnh báo của người dùng
        items:
          $ref: '#/definitions/models.Alert'
        type: array
      email:
        description: Email của người dùng
        type: string
      id:
        description: ID của người dùng
        type: string
    type: object
  models.Alert:
    properties:
      alert_id:
        type: string
      condition:
        description: Condition for the alert, e.g., ">=", "<=", "==", "in range",
          "out range"
        type: string
      created_at:
        description: Timestamp for when the alert was created
        type: integer
      frequency:
        description: Frequency of notification, e.g., "immediate", "daily", "weekly"
        type: string
      is_active:
        description: Whether the alert is active
        type: boolean
      last_fundingrate_interval:
        type: string
      market:
        description: Market for the alert, e.g., "spot" or "future"
        type: string
      max_range:
        type: number
      max_repeat_count:
        description: Số lần lặp lại tối đa
        type: integer
      message:
        description: 'Thông điệp sẽ được gửi trong cảnh báo (ví dụ: "BTC giá đã vượt
          $20,000")'
        type: string
      min_range:
        type: number
      next_trigger_time:
        description: Thời gian kích hoạt tiếp theo
        type: string
      notification_method:
        description: How the user will be notified (email, push, Telegram)
        type: string
      price:
        description: Price threshold for the alert, only applicable for price alerts
        type: number
      range:
        description: Price range for alerts that check if price falls within or outside
          a range
        items:
          type: number
        type: array
      repeat_count:
        description: Số lần đã lặp lại
        type: integer
      snooze_condition:
        description: Loại snooze
        type: string
      symbol:
        description: Symbol for the alert, e.g., "BTCUSDT"
        type: string
      symbols:
        description: List of symbols for symbol alerts
        items:
          type: string
        type: array
      threshold:
        description: Threshold for the alert, only applicable for price alerts
        type: number
      type:
        description: Type of symbol alert, e.g., "new_listing" or "delisting"
        type: string
      updated_at:
        description: Timestamp for when the alert was last updated
        type: integer
      user_id:
        description: ID của người dùng đặt cảnh báo
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        example: An error occurred
        type: string
    type: object
  models.Indicator:
    properties:
      id:
        type: string
      indicator:
        type: string
      notification_method:
        type: string
      period:
        type: integer
      symbol:
        type: string
    required:
    - indicator
    - notification_method
    - period
    - symbol
    type: object
  models.ResponseAlertCheckerStatus:
    properties:
      status:
        example: Alert checker started
        type: string
    type: object
  models.ResponseAlertCreated:
    properties:
      alert_id:
        example: 647f1f77bcf86cd799439011
        type: string
      message:
        example: Alert created successfully
        type: string
    type: object
  models.ResponseAlertDeleted:
    properties:
      message:
        example: Alert deleted successfully
        type: string
    type: object
  models.ResponseAlertDetail:
    properties:
      condition:
        example: '>='
        type: string
      createdAt:
        example: "2024-11-21T00:00:00Z"
        type: string
      frequency:
        example: immediate
        type: string
      id:
        example: 647f1f77bcf86cd799439011
        type: string
      isActive:
        example: true
        type: boolean
      maxRepeatCount:
        example: 5
        type: integer
      price:
        example: 50000
        type: number
      range:
        items:
          type: number
        type: array
      snoozeCondition:
        example: none
        type: string
      symbol:
        example: BTCUSDT
        type: string
      updatedAt:
        example: "2024-11-21T00:00:00Z"
        type: string
    type: object
  models.ResponseAlertList:
    properties:
      alerts:
        items:
          $ref: '#/definitions/models.ResponseAlertDetail'
        type: array
    type: object
  models.ResponseIndicatorCreated:
    properties:
      alert_id:
        description: ID của indicator alert vừa tạo
        type: string
      message:
        type: string
    type: object
  models.ResponseNewDelistedSymbols:
    properties:
      delisted_symbols:
        example:
        - '[BNBUSDT]'
        items:
          type: string
        type: array
      new_symbols:
        example:
        - '[BTCUSDT'
        - ' ETHUSDT]'
        items:
          type: string
        type: array
    type: object
  models.ResponseNotificationSent:
    properties:
      status:
        example: Notification sent
        type: string
    type: object
  models.ResponseSetSymbolAlert:
    properties:
      alert_id:
        example: 647f1f77bcf86cd799439011
        type: string
      message:
        example: Alert created successfully
        type: string
    type: object
  models.ResponseUserAlerts:
    properties:
      alerts:
        items:
          $ref: '#/definitions/models.Alert'
        type: array
    type: object
  models.ResponseUserCreated:
    properties:
      message:
        example: User created successfully
        type: string
      user_id:
        example: 647f1f77bcf86cd799439011
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/alerts:
    get:
      consumes:
      - application/json
      description: Retrieve all alerts, optionally filter by type
      parameters:
      - description: Filter by alert type (e.g., new_listing, delisting)
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of alerts
          schema:
            items:
              $ref: '#/definitions/models.ResponseAlertList'
            type: array
        "500":
          description: Failed to retrieve alerts
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all alerts
      tags:
      - Alerts
    post:
      consumes:
      - application/json
      description: Create a new alert with the given details
      parameters:
      - description: Alert details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Alert'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created alert
          schema:
            $ref: '#/definitions/models.ResponseAlertCreated'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create alert
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create an alert
      tags:
      - Alerts
  /api/v1/alerts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an alert by its unique identifier
      parameters:
      - description: Alert ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Alert deleted successfully
          schema:
            $ref: '#/definitions/models.ResponseAlertDeleted'
        "400":
          description: Invalid alert ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Alert not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an alert
      tags:
      - Alerts
    get:
      consumes:
      - application/json
      description: Retrieve an alert by its unique identifier
      parameters:
      - description: Alert ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Alert details
          schema:
            $ref: '#/definitions/models.ResponseAlertDetail'
        "400":
          description: Invalid alert ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Alert not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get an alert by ID
      tags:
      - Alerts
  /api/v1/alerts/symbol:
    post:
      consumes:
      - application/json
      description: Set a new alert for symbols that are newly listed or delisted
      parameters:
      - description: Alert details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Alert'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created alert for symbol
          schema:
            $ref: '#/definitions/models.ResponseSetSymbolAlert'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create alert for symbol
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Set an alert for new or delisted symbols
      tags:
      - Alerts
  /api/v1/symbols-alerts:
    get:
      consumes:
      - application/json
      description: Retrieve new and delisted symbols from Binance
      produces:
      - application/json
      responses:
        "200":
          description: List of new and delisted symbols
          schema:
            $ref: '#/definitions/models.ResponseNewDelistedSymbols'
        "500":
          description: Failed to retrieve symbols
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get new and delisted symbols
      tags:
      - Alerts
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Create a new user with the given details
      parameters:
      - description: User details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_dath-241_coin-price-be-go_services_trigger-service_models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/models.ResponseUserCreated'
        "400":
          description: Invalid request body or missing email
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a user
      tags:
      - Users
  /api/v1/users/{id}/alerts:
    get:
      consumes:
      - application/json
      description: Retrieve all alerts for a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of user alerts
          schema:
            $ref: '#/definitions/models.ResponseUserAlerts'
        "500":
          description: Failed to retrieve alerts
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user alerts
      tags:
      - Users
  /api/v1/users/{id}/alerts/notify:
    post:
      consumes:
      - application/json
      description: Send a notification email to the user for their alerts
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Notification sent successfully
          schema:
            $ref: '#/definitions/models.ResponseNotificationSent'
        "500":
          description: Failed to send notification
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Notify user of alerts
      tags:
      - Users
  /api/v1/vip2/start-alert-checker:
    post:
      consumes:
      - application/json
      description: Starts the alert checker to monitor for alerts
      produces:
      - application/json
      responses:
        "200":
          description: Alert checker started successfully
          schema:
            $ref: '#/definitions/models.ResponseAlertCheckerStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Start alert checker
      tags:
      - Alert Running
  /api/v1/vip2/stop-alert-checker:
    post:
      consumes:
      - application/json
      description: Stops the alert checker from monitoring for alerts
      produces:
      - application/json
      responses:
        "200":
          description: Alert checker stopped successfully
          schema:
            $ref: '#/definitions/models.ResponseAlertCheckerStatus'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Stop alert checker
      tags:
      - Alert Running
  /api/v1/vip3/indicators:
    post:
      consumes:
      - application/json
      description: Create an alert with the given indicator type and settings
      parameters:
      - description: Indicator alert details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Indicator'
      produces:
      - application/json
      responses:
        "201":
          description: Indicator alert created successfully
          schema:
            $ref: '#/definitions/models.ResponseIndicatorCreated'
        "400":
          description: Invalid request body or invalid indicator type
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Failed to create indicator alert
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create an advanced indicator alert
      tags:
      - Indicators
swagger: "2.0"
